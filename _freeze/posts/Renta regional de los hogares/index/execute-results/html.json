{
  "hash": "8fecd30dd90da1c79a01b771b7bddd17",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Renta regional de los hogares\"\ndate: \"2025-06-01\"\ncategories: [Regional Accounts, Eurostat,R]\nexecute:\n  warning: false\n  message: false\n---\n\n\nEl confidencial ha publicado un artículo (<https://www.elconfidencial.com/economia/2025-05-31/solo-quedan-dos-ccaa-ingresos-hogares-media-ue_4141354/>) que ha tenido cierta repercusión en algunos twitteros \"económicos\" que sigo. El artículo se basa en una publicación de Eurostat (<https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Regional_household_income_statistics>) que es básicamente la publicación que preparé hace cuatro años. Me llevó bastante tiempo prepararlo porque quería evitar el típico anodino artículo (X creció Y% en al año Z) y el código con el que preparé el mock-up todavía está disponible (<https://github.com/eurostat/statistics-coded/blob/master/economy/regional_household_income/statistics_coded_regional_HHI.Rmd>).\n\nEstos días he estado leyendo el libro **\"La factura del cupo catalán. Privilegios territoriales frente a ciudadanía\" (La Esfera de los Libros, 2025)** de JFV y Francisco de la Torre (muy recomendable!).\n\nPuse un cuadro explicativo de por qué no es buena idea comparar la renta disponible (código B6N) de regiones de diferentes países después de algunas discusiones con usuarios holandeses que se escandalizaban de que algunas regiones italianas estuvieran por encima de las holandeses. Habría que usar la renta disponible ajustada (B7N) pero no está disponible (sólo para España).\n\nSobre todo recuerdo lo que me costó explicar el mapa M3. En el se calcula la renta primaria (B5N) y la renta disponibles per capita de los hogares (B6N) y se pone en relación a la media nacional (indice 100). Luego se calcula el ratio entre B6N y B5N. Si el ratio es mayor que 100 indica que la región mejora (relativamente) y si es menor que empeora(relativamente). Se espera, y se cumple, que en general las que están por encima de la media para B5G empeoran y viceversa.\n\nPara comparar actualizo el cálculo para los países federales (Alemania, Austria, Bélgica y España).\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(dplyr,tidyr,stringr,eurostat, ggplot2, luispack,ggtext)\n\nhh2 <- get_eurostat(\"nama_10r_2hhinc\", time_format = \"num\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nindexed 0B in  0s, 0B/s\nindexed 2.15GB in  0s, 2.15GB/s\n                                                                              \n```\n\n\n:::\n\n```{.r .cell-code}\npop3 <- get_eurostat(\"nama_10r_3popgdp\", time_format = \"num\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nindexed 0B in  0s, 0B/s\nindexed 2.15GB in  0s, 2.15GB/s\n                                                                              \n```\n\n\n:::\n\n```{.r .cell-code}\ntemp <- hh2 %>%\n  unite(na_item, c(na_item, direct)) %>%\n  filter(unit == \"MIO_NAC\"& na_item %in% c(\"B5N_BAL\", \"B6N_BAL\")) %>%\n  pivot_wider(\n    names_from = na_item,\n    values_from = values\n  ) %>%\n  mutate(\n    country = str_sub(geo, 1, 2),\n    NUTS = str_length(geo) - 2\n  ) %>%\n  filter(NUTS %in% c(\"0\", \"2\") & country %in% c(\"AT\",\"BE\", \"DE\", \"ES\")) %>%\n  select(geo, country, NUTS, TIME_PERIOD, B5N_BAL, B6N_BAL) %>%\n  pivot_longer(\n    cols = c(\"B5N_BAL\", \"B6N_BAL\"),\n    names_to = \"na_item\",\n    values_to = \"values\"\n  )\n\npop <- pop3 %>%\n  select(-unit) %>%\n  rename(pop = values)\n\ntemp <- left_join(temp, pop) %>%\n  mutate(percapita = values * 1000 / pop) %>%\n  droplevels() %>%\n  group_by(country, na_item, TIME_PERIOD) %>%\n  mutate(nat_percapita = percapita * 100 / percapita[NUTS == \"0\"]) %>%\n  filter(NUTS == \"2\") %>%\n  select(geo, na_item, TIME_PERIOD,nat_percapita) %>%\n  pivot_wider(\n    names_from = na_item,\n    values_from = nat_percapita\n  ) %>%\n  mutate(ratio = round(B6N_BAL * 100 / B5N_BAL, 1)) |> \n  na.omit()\n```\n:::\n\nLo he hecho para todos los años disponibles, 2000-2023 para Austria y Bélgica y 2000-2022 para Alemania y España. Para tener una visión global los pongo en un gráfico. Primero veamos la dispersión de los índices per capita respecto a la medio nacional.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temp)+\n  geom_point(aes(TIME_PERIOD,B5N_BAL),colour = \"#2644A7\", alpha = 0.7)+\n  geom_point(aes(TIME_PERIOD,B6N_BAL),colour = \"#AF155C\", alpha = 0.7)+\n  facet_wrap(vars(country))+\n  theme_luis()+\n   labs(title = \"<span style = 'font-size:14pt;color:#2644A7;'>B5N </span><span style = 'font-size:14pt;color:#AF155C;'>B6N</span>\",\n        subtitle = \"100 = Media nacional\"\n  ) +\n  theme(\n    plot.title = element_markdown(size = 11, lineheight = 1.2)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=1152}\n:::\n:::\n\n\nVemos que en Austria las diferencias en B5N son bastante pequeñas aunque habría que mirar los detalles. Los valores más bajos para España son Ceuta y Melilla que no son muy significativas.\n\nAhora mirando el ratio, vemos que en España hay sólo tres regiones que empeoran (Madrid, Baleares y Cataluña). Navarra está en el 99.9 ppero lo he redondeado a 100. El tamaño del ajuste para Madrid es similar al de Oberbayern o Hamburgo o el Bravante Flamenco..perdiendo unos 10 puntos.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temp)+\n  geom_point(aes(TIME_PERIOD,ratio),colour = \"#E04040\")+\n  geom_hline(yintercept = 100, colour = \"grey10\")+\n  facet_wrap(vars(country))+\n  theme_luis()+\n  labs(title = \"Ratio B5N/B6N\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=1152}\n:::\n:::\n\nAcabo calculando el mismo indicador para la Renta Disponible Ajustada (B7N), que es B6N más D63, que son transferencias sociales en especie que básicamente provee el gobierno (nacional o regional). Básicamente sanidad, educación, vivienda, defensa... Este gráfico confirma claramente la tesis del libro de que la situación del País Vasco es una anomalía.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- hh2 %>%\n  unite(na_item, c(na_item, direct)) %>%\n  filter(unit == \"MIO_NAC\"& na_item %in% c(\"B5N_BAL\", \"B6N_BAL\", \"B7N_BAL\")) %>%\n  pivot_wider(\n    names_from = na_item,\n    values_from = values\n  ) %>%\n  mutate(\n    country = str_sub(geo, 1, 2),\n    NUTS = str_length(geo) - 2\n  ) %>%\n  filter(NUTS %in% c(\"0\", \"2\") & country %in% c( \"ES\")) %>%\n  select(geo, country, NUTS, TIME_PERIOD, B5N_BAL, B6N_BAL, B7N_BAL) %>%\n  pivot_longer(\n    cols = c(\"B5N_BAL\", \"B6N_BAL\", \"B7N_BAL\"),\n    names_to = \"na_item\",\n    values_to = \"values\"\n  )\n\n\ntemp <- left_join(temp, pop) %>%\n  mutate(percapita = values * 1000 / pop) %>%\n  droplevels() %>%\n  group_by(country, na_item, TIME_PERIOD) %>%\n  mutate(nat_percapita = percapita * 100 / percapita[NUTS == \"0\"]) %>%\n  filter(NUTS == \"2\") %>%\n  select(geo, na_item, TIME_PERIOD,nat_percapita) %>%\n  pivot_wider(\n    names_from = na_item,\n    values_from = nat_percapita\n  ) %>%\n  mutate(ratio_B6_B5 = round(B6N_BAL * 100 / B5N_BAL, 1),\n         ratio_B7_B5 = round(B7N_BAL * 100 / B5N_BAL, 1)) |> \n  na.omit() |> \n  filter(geo %in% c(\"ES21\", \"ES22\", \"ES30\", \"ES51\", \"ES53\")) |> \n  select(geo,TIME_PERIOD,ratio_B6_B5, ratio_B7_B5) |> \n  pivot_longer(cols = c(ratio_B6_B5, ratio_B7_B5),\n               names_to = \"ratio\",\n               values_to = \"values\") |> \n  mutate(label = case_when(geo == \"ES21\" ~ \"País Vasco\",\n                           geo == \"ES22\" ~ \"Comunidad Foral de Navarra\",\n                           geo == \"ES30\" ~ \"Comunidad de Madrid\",\n                           geo == \"ES51\" ~ \"Cataluña\",\n                           geo == \"ES53\" ~ \"Illes Balears\"))\n\nggplot(temp,aes(TIME_PERIOD, values,colour = ratio))+\n  geom_line(linewidth = 0.75)+\n  facet_wrap(~label)+\n  theme_luis()+\n  scale_colour_luis()+\n  theme(legend.position = \"top\", legend.justification = \"right\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=1152}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}